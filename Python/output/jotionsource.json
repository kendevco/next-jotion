[{"path": ".", "filename": "next-env.d.ts", "content": ""}, {"path": ".", "filename": "next.config.js", "content": "const nextConfig={images:{domains:[\"files.edgestore.dev\"]}}module.exports=nextConfig"}, {"path": ".", "filename": "postcss.config.js", "content": "module.exports={plugins:{tailwindcss:{},autoprefixer:{},},}"}, {"path": ".", "filename": "tailwind.config.ts", "content": "module.exports={darkMode:[\"class\"],content:['./pages/**/*.{ts,tsx}','./components/**/*.{ts,tsx}','./app/**/*.{ts,tsx}','./src/**/*.{ts,tsx}',],theme:{container:{center:true,padding:\"2rem\",screens:{\"2xl\":\"1400px\",},},extend:{colors:{border:\"hsl(var(--border))\",input:\"hsl(var(--input))\",ring:\"hsl(var(--ring))\",background:\"hsl(var(--background))\",foreground:\"hsl(var(--foreground))\",primary:{DEFAULT:\"hsl(var(--primary))\",foreground:\"hsl(var(--primary-foreground))\",},secondary:{DEFAULT:\"hsl(var(--secondary))\",foreground:\"hsl(var(--secondary-foreground))\",},destructive:{DEFAULT:\"hsl(var(--destructive))\",foreground:\"hsl(var(--destructive-foreground))\",},muted:{DEFAULT:\"hsl(var(--muted))\",foreground:\"hsl(var(--muted-foreground))\",},accent:{DEFAULT:\"hsl(var(--accent))\",foreground:\"hsl(var(--accent-foreground))\",},popover:{DEFAULT:\"hsl(var(--popover))\",foreground:\"hsl(var(--popover-foreground))\",},card:{DEFAULT:\"hsl(var(--card))\",foreground:\"hsl(var(--card-foreground))\",},},borderRadius:{lg:\"var(--radius)\",md:\"calc(var(--radius) - 2px)\",sm:\"calc(var(--radius) - 4px)\",},keyframes:{\"accordion-down\":{from:{height:0},to:{height:\"var(--radix-accordion-content-height)\"},},\"accordion-up\":{from:{height:\"var(--radix-accordion-content-height)\"},to:{height:0},},},animation:{\"accordion-down\":\"accordion-down 0.2s ease-out\",\"accordion-up\":\"accordion-up 0.2s ease-out\",},},},plugins:[require(\"tailwindcss-animate\")],}"}, {"path": ".\\app", "filename": "error.tsx", "content": "\"use client\";import Image from\"next/image\";import Link from\"next/link\";import{Button}from\"@/components/ui/button\";const Error=()=>{return(<div className=\"h-full flex flex-col items-center justify-center space-y-4\"><Image src=\"/error.png\"height=\"300\"width=\"300\"alt=\"Error\"className=\"dark:hidden\"/><Image src=\"/error-dark.png\"height=\"300\"width=\"300\"alt=\"Error\"className=\"hidden dark:block\"/><h2 className=\"text-xl font-medium\">Something went wrong!</h2><Button asChild><Link href=\"/documents\">Go back</Link></Button></div>);}export default Error;"}, {"path": ".\\app", "filename": "layout.tsx", "content": "import{Toaster}from\"sonner\";import{Inter}from'next/font/google'import type{Metadata}from'next'import{ThemeProvider}from'@/components/providers/theme-provider'import{ConvexClientProvider}from'@/components/providers/convex-provider'import{ModalProvider}from\"@/components/providers/modal-provider\";import{EdgeStoreProvider}from\"@/lib/edgestore\";import'./globals.css'const inter=Inter({subsets:['latin']})export const metadata:Metadata={title:'Jotion',description:'The connected workspace where better, faster work happens.',icons:{icon:[{media:\"(prefers-color-scheme: light)\",url:\"/logo.svg\",href:\"/logo.svg\",},{media:\"(prefers-color-scheme: dark)\",url:\"/logo-dark.svg\",href:\"/logo-dark.svg\",}]}}export default function RootLayout({children,}:{children:React.ReactNode}){return(<html lang=\"en\"suppressHydrationWarning><body className={inter.className}><ConvexClientProvider><EdgeStoreProvider><ThemeProvider attribute=\"class\"defaultTheme=\"system\"enableSystem disableTransitionOnChange storageKey=\"jotion-theme-2\"><Toaster position=\"bottom-center\"/><ModalProvider/>{children}</ThemeProvider></EdgeStoreProvider></ConvexClientProvider></body></html>)}"}, {"path": ".\\app\\(main)", "filename": "layout.tsx", "content": "\"use client\";import{useConvexAuth}from\"convex/react\";import{redirect}from\"next/navigation\";import{Spinner}from\"@/components/spinner\";import{SearchCommand}from\"@/components/search-command\";import{Navigation}from\"./_components/navigation\";const MainLayout=({children}:{children:React.ReactNode;})=>{const{isAuthenticated,isLoading}=useConvexAuth();if(isLoading){return(<div className=\"h-full flex items-center justify-center\"><Spinner size=\"lg\"/></div>);}if(!isAuthenticated){return redirect(\"/\");}return(<div className=\"h-full flex dark:bg-[#1F1F1F]\"><Navigation/><main className=\"flex-1 h-full overflow-y-auto\"><SearchCommand/>{children}</main></div>);}export default MainLayout;"}, {"path": ".\\app\\(main)\\(routes)\\documents", "filename": "page.tsx", "content": "\"use client\";import Image from\"next/image\";import{useUser}from\"@clerk/clerk-react\";import{PlusCircle}from\"lucide-react\";import{useMutation}from\"convex/react\";import{toast}from\"sonner\";import{useRouter}from\"next/navigation\";import{api}from\"@/convex/_generated/api\";import{Button}from\"@/components/ui/button\";const DocumentsPage=()=>{const router=useRouter();const{user}=useUser();const create=useMutation(api.documents.create);const onCreate=()=>{const promise=create({title:\"Untitled\"}).then((documentId)=>router.push(`/documents/${documentId}`))toast.promise(promise,{loading:\"Creating a new note...\",success:\"New note created!\",error:\"Failed to create a new note.\"});};return(<div className=\"h-full flex flex-col items-center justify-center space-y-4\"><Image src=\"/empty.png\"height=\"300\"width=\"300\"alt=\"Empty\"className=\"dark:hidden\"/><Image src=\"/empty-dark.png\"height=\"300\"width=\"300\"alt=\"Empty\"className=\"hidden dark:block\"/><h2 className=\"text-lg font-medium\">Welcome to{user?.firstName}&apos;s Jotion</h2><Button onClick={onCreate}><PlusCircle className=\"h-4 w-4 mr-2\"/>Create a note</Button></div>);}export default DocumentsPage;"}, {"path": ".\\app\\(main)\\(routes)\\documents\\[documentId]", "filename": "page.tsx", "content": "\"use client\";import{useMutation,useQuery}from\"convex/react\";import dynamic from\"next/dynamic\";import{useMemo}from\"react\";import{api}from\"@/convex/_generated/api\";import{Id}from\"@/convex/_generated/dataModel\";import{Toolbar}from\"@/components/toolbar\";import{Cover}from\"@/components/cover\";import{Skeleton}from\"@/components/ui/skeleton\";interface DocumentIdPageProps{params:{documentId:Id<\"documents\">;};};const DocumentIdPage=({params}:DocumentIdPageProps)=>{const Editor=useMemo(()=>dynamic(()=>import(\"@/components/editor\"),{ssr:false}),[]);const document=useQuery(api.documents.getById,{documentId:params.documentId});const update=useMutation(api.documents.update);const onChange=(content:string)=>{update({id:params.documentId,content});};if(document===undefined){return(<div><Cover.Skeleton/><div className=\"md:max-w-3xl lg:max-w-4xl mx-auto mt-10\"><div className=\"space-y-4 pl-8 pt-4\"><Skeleton className=\"h-14 w-[50%]\"/><Skeleton className=\"h-4 w-[80%]\"/><Skeleton className=\"h-4 w-[40%]\"/><Skeleton className=\"h-4 w-[60%]\"/></div></div></div>);}if(document===null){return<div>Not found</div>}return(<div className=\"pb-40\"><Cover url={document.coverImage}/><div className=\"md:max-w-3xl lg:max-w-4xl mx-auto\"><Toolbar initialData={document}/><Editor onChange={onChange}initialContent={document.content}/></div></div>);}export default DocumentIdPage;"}, {"path": ".\\app\\(main)\\_components", "filename": "banner.tsx", "content": "\"use client\";import{useRouter}from\"next/navigation\";import{useMutation}from\"convex/react\";import{toast}from\"sonner\";import{Id}from\"@/convex/_generated/dataModel\";import{api}from\"@/convex/_generated/api\";import{Button}from\"@/components/ui/button\";import{ConfirmModal}from\"@/components/modals/confirm-modal\";interface BannerProps{documentId:Id<\"documents\">;};export const Banner=({documentId}:BannerProps)=>{const router=useRouter();const remove=useMutation(api.documents.remove);const restore=useMutation(api.documents.restore);const onRemove=()=>{const promise=remove({id:documentId});toast.promise(promise,{loading:\"Deleting note...\",success:\"Note deleted!\",error:\"Failed to delete note.\"});router.push(\"/documents\");};const onRestore=()=>{const promise=restore({id:documentId});toast.promise(promise,{loading:\"Restoring note...\",success:\"Note restored!\",error:\"Failed to restore note.\"});};return(<div className=\"w-full bg-rose-500 text-center text-sm p-2 text-white flex items-center gap-x-2 justify-center\"><p>This page is in the Trash.</p><Button size=\"sm\"onClick={onRestore}variant=\"outline\"className=\"border-white bg-transparent hover:bg-primary/5 text-white hover:text-white p-1 px-2 h-auto font-normal\">Restore page</Button><ConfirmModal onConfirm={onRemove}><Button size=\"sm\"variant=\"outline\"className=\"border-white bg-transparent hover:bg-primary/5 text-white hover:text-white p-1 px-2 h-auto font-normal\">Delete forever</Button></ConfirmModal></div>)}"}, {"path": ".\\app\\(main)\\_components", "filename": "document-list.tsx", "content": "\"use client\";import{useParams,useRouter}from\"next/navigation\";import{useState}from\"react\";import{useQuery}from\"convex/react\";import{FileIcon}from\"lucide-react\";import{Doc,Id}from\"@/convex/_generated/dataModel\";import{api}from\"@/convex/_generated/api\";import{cn}from\"@/lib/utils\";import{Item}from\"./item\";interface DocumentListProps{parentDocumentId?:Id<\"documents\">;level?:number;data?:Doc<\"documents\">[];}export const DocumentList=({parentDocumentId,level=0}:DocumentListProps)=>{const params=useParams();const router=useRouter();const[expanded,setExpanded]=useState<Record<string,boolean>>({});const onExpand=(documentId:string)=>{setExpanded(prevExpanded=>({...prevExpanded,[documentId]:!prevExpanded[documentId]}));};const documents=useQuery(api.documents.getSidebar,{parentDocument:parentDocumentId});const onRedirect=(documentId:string)=>{router.push(`/documents/${documentId}`);};if(documents===undefined){return(<><Item.Skeleton level={level}/>{level===0&&(<><Item.Skeleton level={level}/><Item.Skeleton level={level}/></>)}</>);};return(<><p style={{paddingLeft:level?`${(level*12)+25}px`:undefined}}className={cn(\"hidden text-sm font-medium text-muted-foreground/80\",expanded&&\"last:block\",level===0&&\"hidden\")}>No pages inside</p>{documents.sort((a,b)=>a.title.localeCompare(b.title)).map((document)=>(<div key={document._id}><Item id={document._id}onClick={()=>onRedirect(document._id)}label={document.title}icon={FileIcon}documentIcon={document.icon}active={params.documentId===document._id}level={level}onExpand={()=>onExpand(document._id)}expanded={expanded[document._id]}/>{expanded[document._id]&&(<DocumentList parentDocumentId={document._id}level={level+1}/>)}</div>))}</>);};"}, {"path": ".\\app\\(main)\\_components", "filename": "item.tsx", "content": "\"use client\";import{ChevronDown,ChevronRight,LucideIcon,MoreHorizontal,Plus,Trash}from\"lucide-react\";import{useMutation}from\"convex/react\";import{useRouter}from\"next/navigation\";import{toast}from\"sonner\";import{useUser}from\"@clerk/clerk-react\";import{Id}from\"@/convex/_generated/dataModel\";import{cn}from\"@/lib/utils\";import{Skeleton}from\"@/components/ui/skeleton\";import{api}from\"@/convex/_generated/api\";import{DropdownMenu,DropdownMenuTrigger,DropdownMenuContent,DropdownMenuItem,DropdownMenuSeparator}from\"@/components/ui/dropdown-menu\";interface ItemProps{id?:Id<\"documents\">;documentIcon?:string;active?:boolean;expanded?:boolean;isSearch?:boolean;level?:number;onExpand?:()=>void;label:string;onClick?:()=>void;icon:LucideIcon;};export const Item=({id,label,onClick,icon:Icon,active,documentIcon,isSearch,level=0,onExpand,expanded,}:ItemProps)=>{const{user}=useUser();const router=useRouter();const create=useMutation(api.documents.create);const archive=useMutation(api.documents.archive);const onArchive=(event:React.MouseEvent<HTMLDivElement,MouseEvent>)=>{event.stopPropagation();if(!id)return;const promise=archive({id}).then(()=>router.push(\"/documents\"))toast.promise(promise,{loading:\"Moving to trash...\",success:\"Note moved to trash!\",error:\"Failed to archive note.\"});};const handleExpand=(event:React.MouseEvent<HTMLDivElement,MouseEvent>)=>{event.stopPropagation();onExpand?.();};const onCreate=(event:React.MouseEvent<HTMLDivElement,MouseEvent>)=>{event.stopPropagation();if(!id)return;const promise=create({title:\"Untitled\",parentDocument:id}).then((documentId)=>{if(!expanded){onExpand?.();}router.push(`/documents/${documentId}`);});toast.promise(promise,{loading:\"Creating a new note...\",success:\"New note created!\",error:\"Failed to create a new note.\"});};const ChevronIcon=expanded?ChevronDown:ChevronRight;return(<div onClick={onClick}role=\"button\"style={{paddingLeft:level?`${(level*12)+12}px`:\"12px\"}}className={cn(\"group min-h-[27px] text-sm py-1 pr-3 w-full hover:bg-primary/5 flex items-center text-muted-foreground font-medium\",active&&\"bg-primary/5 text-primary\")}>{!!id&&(<div role=\"button\"className=\"h-full rounded-sm hover:bg-neutral-300 dark:hover:bg-neutral-600 mr-1\"onClick={handleExpand}><ChevronIcon className=\"h-4 w-4 shrink-0 text-muted-foreground/50\"/></div>)}{documentIcon?(<div className=\"shrink-0 mr-2 text-[18px]\">{documentIcon}</div>):(<Icon className=\"shrink-0 h-[18px] w-[18px] mr-2 text-muted-foreground\"/>)}<span className=\"truncate\">{label}</span>{isSearch&&(<kbd className=\"ml-auto pointer-events-none inline-flex h-5 select-none items-center gap-1 rounded border bg-muted px-1.5 font-mono text-[10px] font-medium text-muted-foreground opacity-100\"><span className=\"text-xs\">\u00e2\u0152\u02dc</span>K</kbd>)}{!!id&&(<div className=\"ml-auto flex items-center gap-x-2\"><DropdownMenu><DropdownMenuTrigger onClick={(e)=>e.stopPropagation()}asChild><div role=\"button\"className=\"opacity-0 group-hover:opacity-100 h-full ml-auto rounded-sm hover:bg-neutral-300 dark:hover:bg-neutral-600\"><MoreHorizontal className=\"h-4 w-4 text-muted-foreground\"/></div></DropdownMenuTrigger><DropdownMenuContent className=\"w-60\"align=\"start\"side=\"right\"forceMount><DropdownMenuItem onClick={onArchive}><Trash className=\"h-4 w-4 mr-2\"/>Delete</DropdownMenuItem><DropdownMenuSeparator/><div className=\"text-xs text-muted-foreground p-2\">Last edited by:{user?.fullName}</div></DropdownMenuContent></DropdownMenu><div role=\"button\"onClick={onCreate}className=\"opacity-0 group-hover:opacity-100 h-full ml-auto rounded-sm hover:bg-neutral-300 dark:hover:bg-neutral-600\"><Plus className=\"h-4 w-4 text-muted-foreground\"/></div></div>)}</div>)}Item.Skeleton=function ItemSkeleton({level}:{level?:number}){return(<div style={{paddingLeft:level?`${(level*12)+25}px`:\"12px\"}}className=\"flex gap-x-2 py-[3px]\"><Skeleton className=\"h-4 w-4\"/><Skeleton className=\"h-4 w-[30%]\"/></div>)}"}, {"path": ".\\app\\(main)\\_components", "filename": "menu.tsx", "content": "\"use client\";import{useRouter}from\"next/navigation\";import{useUser}from\"@clerk/clerk-react\";import{useMutation}from\"convex/react\";import{toast}from\"sonner\";import{MoreHorizontal,Trash}from\"lucide-react\";import{Id}from\"@/convex/_generated/dataModel\";import{DropdownMenu,DropdownMenuTrigger,DropdownMenuContent,DropdownMenuItem,DropdownMenuSeparator}from\"@/components/ui/dropdown-menu\";import{api}from\"@/convex/_generated/api\";import{Button}from\"@/components/ui/button\";import{Skeleton}from\"@/components/ui/skeleton\";interface MenuProps{documentId:Id<\"documents\">;};export const Menu=({documentId}:MenuProps)=>{const router=useRouter();const{user}=useUser();const archive=useMutation(api.documents.archive);const onArchive=()=>{const promise=archive({id:documentId})toast.promise(promise,{loading:\"Moving to trash...\",success:\"Note moved to trash!\",error:\"Failed to archive note.\"});router.push(\"/documents\");};return(<DropdownMenu><DropdownMenuTrigger asChild><Button size=\"sm\"variant=\"ghost\"><MoreHorizontal className=\"h-4 w-4\"/></Button></DropdownMenuTrigger><DropdownMenuContent className=\"w-60\"align=\"end\"alignOffset={8}forceMount><DropdownMenuItem onClick={onArchive}><Trash className=\"h-4 w-4 mr-2\"/>Delete</DropdownMenuItem><DropdownMenuSeparator/><div className=\"text-xs text-muted-foreground p-2\">Last edited by:{user?.fullName}</div></DropdownMenuContent></DropdownMenu>);};Menu.Skeleton=function MenuSkeleton(){return(<Skeleton className=\"h-10 w-10\"/>)}"}, {"path": ".\\app\\(main)\\_components", "filename": "navbar.tsx", "content": "\"use client\";import{useQuery}from\"convex/react\";import{useParams}from\"next/navigation\";import{MenuIcon}from\"lucide-react\";import{api}from\"@/convex/_generated/api\";import{Id}from\"@/convex/_generated/dataModel\";import{Title}from\"./title\";import{Banner}from\"./banner\";import{Menu}from\"./menu\";import{Publish}from\"./publish\";interface NavbarProps{isCollapsed:boolean;onResetWidth:()=>void;};export const Navbar=({isCollapsed,onResetWidth}:NavbarProps)=>{const params=useParams();const document=useQuery(api.documents.getById,{documentId:params.documentId as Id<\"documents\">,});if(document===undefined){return(<nav className=\"bg-background dark:bg-[#1F1F1F] px-3 py-2 w-full flex items-center justify-between\"><Title.Skeleton/><div className=\"flex items-center gap-x-2\"><Menu.Skeleton/></div></nav>)}if(document===null){return null;}return(<><nav className=\"bg-background dark:bg-[#1F1F1F] px-3 py-2 w-full flex items-center gap-x-4\">{isCollapsed&&(<MenuIcon role=\"button\"onClick={onResetWidth}className=\"h-6 w-6 text-muted-foreground\"/>)}<div className=\"flex items-center justify-between w-full\"><Title initialData={document}/><div className=\"flex items-center gap-x-2\"><Publish initialData={document}/><Menu documentId={document._id}/></div></div></nav>{document.isArchived&&(<Banner documentId={document._id}/>)}</>)}"}, {"path": ".\\app\\(main)\\_components", "filename": "navigation.tsx", "content": "\"use client\";import{ChevronsLeft,MenuIcon,Plus,PlusCircle,Search,Settings,Trash}from\"lucide-react\";import{useParams,usePathname,useRouter}from\"next/navigation\";import{ElementRef,useEffect,useRef,useState}from\"react\";import{useMediaQuery}from\"usehooks-ts\";import{useMutation}from\"convex/react\";import{toast}from\"sonner\";import{cn}from\"@/lib/utils\";import{api}from\"@/convex/_generated/api\";import{Popover,PopoverTrigger,PopoverContent,}from\"@/components/ui/popover\";import{useSearch}from\"@/hooks/use-search\";import{useSettings}from\"@/hooks/use-settings\";import{UserItem}from\"./user-item\";import{Item}from\"./item\";import{DocumentList}from\"./document-list\";import{TrashBox}from\"./trash-box\";import{Navbar}from\"./navbar\";export const Navigation=()=>{const router=useRouter();const settings=useSettings();const search=useSearch();const params=useParams();const pathname=usePathname();const isMobile=useMediaQuery(\"(max-width: 768px)\");const create=useMutation(api.documents.create);const isResizingRef=useRef(false);const sidebarRef=useRef<ElementRef<\"aside\">>(null);const navbarRef=useRef<ElementRef<\"div\">>(null);const[isResetting,setIsResetting]=useState(false);const[isCollapsed,setIsCollapsed]=useState(isMobile);useEffect(()=>{if(isMobile){collapse();}else{resetWidth();}},[isMobile]);useEffect(()=>{if(isMobile){collapse();}},[pathname,isMobile]);const handleMouseDown=(event:React.MouseEvent<HTMLDivElement,MouseEvent>)=>{event.preventDefault();event.stopPropagation();isResizingRef.current=true;document.addEventListener(\"mousemove\",handleMouseMove);document.addEventListener(\"mouseup\",handleMouseUp);};const handleMouseMove=(event:MouseEvent)=>{if(!isResizingRef.current)return;let newWidth=event.clientX;if(newWidth<240)newWidth=240;if(newWidth>480)newWidth=480;if(sidebarRef.current&&navbarRef.current){sidebarRef.current.style.width=`${newWidth}px`;navbarRef.current.style.setProperty(\"left\",`${newWidth}px`);navbarRef.current.style.setProperty(\"width\",`calc(100%-${newWidth}px)`);}};const handleMouseUp=()=>{isResizingRef.current=false;document.removeEventListener(\"mousemove\",handleMouseMove);document.removeEventListener(\"mouseup\",handleMouseUp);};const resetWidth=()=>{if(sidebarRef.current&&navbarRef.current){setIsCollapsed(false);setIsResetting(true);sidebarRef.current.style.width=isMobile?\"100%\":\"240px\";navbarRef.current.style.setProperty(\"width\",isMobile?\"0\":\"calc(100% - 240px)\");navbarRef.current.style.setProperty(\"left\",isMobile?\"100%\":\"240px\");setTimeout(()=>setIsResetting(false),300);}};const collapse=()=>{if(sidebarRef.current&&navbarRef.current){setIsCollapsed(true);setIsResetting(true);sidebarRef.current.style.width=\"0\";navbarRef.current.style.setProperty(\"width\",\"100%\");navbarRef.current.style.setProperty(\"left\",\"0\");setTimeout(()=>setIsResetting(false),300);}}const handleCreate=()=>{const promise=create({title:\"Untitled\"}).then((documentId)=>router.push(`/documents/${documentId}`))toast.promise(promise,{loading:\"Creating a new note...\",success:\"New note created!\",error:\"Failed to create a new note.\"});};return(<><aside ref={sidebarRef}className={cn(\"group/sidebar h-full bg-secondary overflow-y-auto relative flex w-60 flex-col z-[99999]\",isResetting&&\"transition-all ease-in-out duration-300\",isMobile&&\"w-0\")}><div onClick={collapse}role=\"button\"className={cn(\"h-6 w-6 text-muted-foreground rounded-sm hover:bg-neutral-300 dark:hover:bg-neutral-600 absolute top-3 right-2 opacity-0 group-hover/sidebar:opacity-100 transition\",isMobile&&\"opacity-100\")}><ChevronsLeft className=\"h-6 w-6\"/></div><div><UserItem/><Item label=\"Search\"icon={Search}isSearch onClick={search.onOpen}/><Item label=\"Settings\"icon={Settings}onClick={settings.onOpen}/><Item onClick={handleCreate}label=\"New page\"icon={PlusCircle}/></div><div className=\"mt-4\"><DocumentList/><Item onClick={handleCreate}icon={Plus}label=\"Add a page\"/><Popover><PopoverTrigger className=\"w-full mt-4\"><Item label=\"Trash\"icon={Trash}/></PopoverTrigger><PopoverContent className=\"p-0 w-72\"side={isMobile?\"bottom\":\"right\"}><TrashBox/></PopoverContent></Popover></div><div onMouseDown={handleMouseDown}onClick={resetWidth}className=\"opacity-0 group-hover/sidebar:opacity-100 transition cursor-ew-resize absolute h-full w-1 bg-primary/10 right-0 top-0\"/></aside><div ref={navbarRef}className={cn(\"absolute top-0 z-[99999] left-60 w-[calc(100%-240px)]\",isResetting&&\"transition-all ease-in-out duration-300\",isMobile&&\"left-0 w-full\")}>{!!params.documentId?(<Navbar isCollapsed={isCollapsed}onResetWidth={resetWidth}/>):(<nav className=\"bg-transparent px-3 py-2 w-full\">{isCollapsed&&<MenuIcon onClick={resetWidth}role=\"button\"className=\"h-6 w-6 text-muted-foreground\"/>}</nav>)}</div></>)}"}, {"path": ".\\app\\(main)\\_components", "filename": "publish.tsx", "content": "\"use client\";import{useState}from\"react\";import{useMutation}from\"convex/react\";import{toast}from\"sonner\";import{Check,Copy,Globe}from\"lucide-react\";import{Doc}from\"@/convex/_generated/dataModel\";import{PopoverTrigger,Popover,PopoverContent}from\"@/components/ui/popover\"import{useOrigin}from\"@/hooks/use-origin\";import{api}from\"@/convex/_generated/api\";import{Button}from\"@/components/ui/button\";interface PublishProps{initialData:Doc<\"documents\">};export const Publish=({initialData}:PublishProps)=>{const origin=useOrigin();const update=useMutation(api.documents.update);const[copied,setCopied]=useState(false);const[isSubmitting,setIsSubmitting]=useState(false);const url=`${origin}/preview/${initialData._id}`;const onPublish=()=>{setIsSubmitting(true);const promise=update({id:initialData._id,isPublished:true,}).finally(()=>setIsSubmitting(false));toast.promise(promise,{loading:\"Publishing...\",success:\"Note published\",error:\"Failed to publish note.\",});};const onUnpublish=()=>{setIsSubmitting(true);const promise=update({id:initialData._id,isPublished:false,}).finally(()=>setIsSubmitting(false));toast.promise(promise,{loading:\"Unpublishing...\",success:\"Note unpublished\",error:\"Failed to unpublish note.\",});};const onCopy=()=>{navigator.clipboard.writeText(url);setCopied(true);setTimeout(()=>{setCopied(false);},1000);}return(<Popover><PopoverTrigger asChild><Button size=\"sm\"variant=\"ghost\">Publish{initialData.isPublished&&(<Globe className=\"text-sky-500 w-4 h-4 ml-2\"/>)}</Button></PopoverTrigger><PopoverContent className=\"w-72\"align=\"end\"alignOffset={8}forceMount>{initialData.isPublished?(<div className=\"space-y-4\"><div className=\"flex items-center gap-x-2\"><Globe className=\"text-sky-500 animate-pulse h-4 w-4\"/><p className=\"text-xs font-medium text-sky-500\">This note is live on web.</p></div><div className=\"flex items-center\"><input className=\"flex-1 px-2 text-xs border rounded-l-md h-8 bg-muted truncate\"value={url}disabled/><Button onClick={onCopy}disabled={copied}className=\"h-8 rounded-l-none\">{copied?(<Check className=\"h-4 w-4\"/>):(<Copy className=\"h-4 w-4\"/>)}</Button></div><Button size=\"sm\"className=\"w-full text-xs\"disabled={isSubmitting}onClick={onUnpublish}>Unpublish</Button></div>):(<div className=\"flex flex-col items-center justify-center\"><Globe className=\"h-8 w-8 text-muted-foreground mb-2\"/><p className=\"text-sm font-medium mb-2\">Publish this note</p><span className=\"text-xs text-muted-foreground mb-4\">Share your work with others.</span><Button disabled={isSubmitting}onClick={onPublish}className=\"w-full text-xs\"size=\"sm\">Publish</Button></div>)}</PopoverContent></Popover>)}"}, {"path": ".\\app\\(main)\\_components", "filename": "title.tsx", "content": "\"use client\";import{useRef,useState}from\"react\";import{useMutation}from\"convex/react\";import{Doc}from\"@/convex/_generated/dataModel\";import{api}from\"@/convex/_generated/api\";import{Input}from\"@/components/ui/input\";import{Button}from\"@/components/ui/button\";import{Skeleton}from\"@/components/ui/skeleton\";interface TitleProps{initialData:Doc<\"documents\">;};export const Title=({initialData}:TitleProps)=>{const inputRef=useRef<HTMLInputElement>(null);const update=useMutation(api.documents.update);const[title,setTitle]=useState(initialData.title||\"Untitled\");const[isEditing,setIsEditing]=useState(false);const enableInput=()=>{setTitle(initialData.title);setIsEditing(true);setTimeout(()=>{inputRef.current?.focus();inputRef.current?.setSelectionRange(0,inputRef.current.value.length)},0);};const disableInput=()=>{setIsEditing(false);};const onChange=(event:React.ChangeEvent<HTMLInputElement>)=>{setTitle(event.target.value);update({id:initialData._id,title:event.target.value||\"Untitled\"});};const onKeyDown=(event:React.KeyboardEvent<HTMLInputElement>)=>{if(event.key===\"Enter\"){disableInput();}};return(<div className=\"flex items-center gap-x-1\">{!!initialData.icon&&<p>{initialData.icon}</p>}{isEditing?(<Input ref={inputRef}onClick={enableInput}onBlur={disableInput}onChange={onChange}onKeyDown={onKeyDown}value={title}className=\"h-7 px-2 focus-visible:ring-transparent\"/>):(<Button onClick={enableInput}variant=\"ghost\"size=\"sm\"className=\"font-normal h-auto p-1\"><span className=\"truncate\">{initialData?.title}</span></Button>)}</div>)}Title.Skeleton=function TitleSkeleton(){return(<Skeleton className=\"h-9 w-20 rounded-md\"/>);};"}, {"path": ".\\app\\(main)\\_components", "filename": "trash-box.tsx", "content": "\"use client\";import{useState}from\"react\";import{useParams,useRouter}from\"next/navigation\";import{useQuery,useMutation}from\"convex/react\";import{Search,Trash,Undo}from\"lucide-react\";import{toast}from\"sonner\";import{api}from\"@/convex/_generated/api\";import{Id}from\"@/convex/_generated/dataModel\";import{Spinner}from\"@/components/spinner\";import{Input}from\"@/components/ui/input\";import{ConfirmModal}from\"@/components/modals/confirm-modal\";export const TrashBox=()=>{const router=useRouter();const params=useParams();const documents=useQuery(api.documents.getTrash);const restore=useMutation(api.documents.restore);const remove=useMutation(api.documents.remove);const[search,setSearch]=useState(\"\");const filteredDocuments=documents?.filter((document)=>{return document.title.toLowerCase().includes(search.toLowerCase());});const onClick=(documentId:string)=>{router.push(`/documents/${documentId}`);};const onRestore=(event:React.MouseEvent<HTMLDivElement,MouseEvent>,documentId:Id<\"documents\">,)=>{event.stopPropagation();const promise=restore({id:documentId});toast.promise(promise,{loading:\"Restoring note...\",success:\"Note restored!\",error:\" Failed to restore note.\"});};const onRemove=(documentId:Id<\"documents\">,)=>{const promise=remove({id:documentId});toast.promise(promise,{loading:\"Deleting note...\",success:\"Note deleted!\",error:\" Failed to delete note.\"});if(params.documentId===documentId){router.push(\"/documents\");}};if(documents===undefined){return(<div className=\"h-full flex items-center justify-center p-4\"><Spinner size=\"lg\"/></div>);}return(<div className=\"text-sm\"><div className=\"flex items-center gap-x-1 p-2\"><Search className=\"h-4 w-4\"/><Input value={search}onChange={(e)=>setSearch(e.target.value)}className=\"h-7 px-2 focus-visible:ring-transparent bg-secondary\"placeholder=\"Filter by page title...\"/></div><div className=\"mt-2 px-1 pb-1\"><p className=\"hidden last:block text-xs text-center text-muted-foreground pb-2\">No documents found.</p>{filteredDocuments?.map((document)=>(<div key={document._id}role=\"button\"onClick={()=>onClick(document._id)}className=\"text-sm rounded-sm w-full hover:bg-primary/5 flex items-center text-primary justify-between\"><span className=\"truncate pl-2\">{document.title}</span><div className=\"flex items-center\"><div onClick={(e)=>onRestore(e,document._id)}role=\"button\"className=\"rounded-sm p-2 hover:bg-neutral-200 dark:hover:bg-neutral-600\"><Undo className=\"h-4 w-4 text-muted-foreground\"/></div><ConfirmModal onConfirm={()=>onRemove(document._id)}><div role=\"button\"className=\"rounded-sm p-2 hover:bg-neutral-200 dark:hover:bg-neutral-600\"><Trash className=\"h-4 w-4 text-muted-foreground\"/></div></ConfirmModal></div></div>))}</div></div>);};"}, {"path": ".\\app\\(main)\\_components", "filename": "user-item.tsx", "content": "\"use client\";import{ChevronsLeftRight}from\"lucide-react\";import{useUser,SignOutButton}from\"@clerk/clerk-react\";import{Avatar,AvatarImage}from\"@/components/ui/avatar\";import{DropdownMenu,DropdownMenuContent,DropdownMenuItem,DropdownMenuLabel,DropdownMenuSeparator,DropdownMenuTrigger,}from\"@/components/ui/dropdown-menu\";export const UserItem=()=>{const{user}=useUser();return(<DropdownMenu><DropdownMenuTrigger asChild><div role=\"button\"className=\"flex items-center text-sm p-3 w-full hover:bg-primary/5\"><div className=\"gap-x-2 flex items-center max-w-[150px]\"><Avatar className=\"h-5 w-5\"><AvatarImage src={user?.imageUrl}/></Avatar><span className=\"text-start font-medium line-clamp-1\">{user?.fullName}&apos;s Jotion</span></div><ChevronsLeftRight className=\"rotate-90 ml-2 text-muted-foreground h-4 w-4\"/></div></DropdownMenuTrigger><DropdownMenuContent className=\"w-80\"align=\"start\"alignOffset={11}forceMount><div className=\"flex flex-col space-y-4 p-2\"><p className=\"text-xs font-medium leading-none text-muted-foreground\">{user?.emailAddresses[0].emailAddress}</p><div className=\"flex items-center gap-x-2\"><div className=\"rounded-md bg-secondary p-1\"><Avatar className=\"h-8 w-8\"><AvatarImage src={user?.imageUrl}/></Avatar></div><div className=\"space-y-1\"><p className=\"text-sm line-clamp-1\">{user?.fullName}&apos;s Jotion</p></div></div></div><DropdownMenuSeparator/><DropdownMenuItem asChild className=\"w-full cursor-pointer text-muted-foreground\"><SignOutButton>Log out</SignOutButton></DropdownMenuItem></DropdownMenuContent></DropdownMenu>)}"}, {"path": ".\\app\\(marketing)", "filename": "layout.tsx", "content": "import{Navbar}from\"./_components/navbar\";const MarketingLayout=({children}:{children:React.ReactNode;})=>{return(<div className=\"h-full dark:bg-[#1F1F1F]\"><Navbar/><main className=\"h-full pt-40\">{children}</main></div>);}export default MarketingLayout;"}, {"path": ".\\app\\(marketing)", "filename": "page.tsx", "content": "import{Footer}from\"./_components/footer\";import{Heading}from\"./_components/heading\";import{Heroes}from\"./_components/heroes\";const MarketingPage=()=>{return(<div className=\"min-h-full flex flex-col dark:bg-[#1F1F1F]\"><div className=\"flex flex-col items-center justify-center md:justify-start text-center gap-y-8 flex-1 px-6 pb-10\"><Heading/><Heroes/></div><Footer/></div>);}export default MarketingPage;"}, {"path": ".\\app\\(marketing)\\_components", "filename": "footer.tsx", "content": "import{Button}from\"@/components/ui/button\"import{Logo}from\"./logo\"export const Footer=()=>{return(<div className=\"flex items-center w-full p-6 bg-background z-50 dark:bg-[#1F1F1F]\"><Logo/><div className=\"md:ml-auto w-full justify-between md:justify-end flex items-center gap-x-2 text-muted-foreground\"><Button variant=\"ghost\"size=\"sm\">Privacy Policy</Button><Button variant=\"ghost\"size=\"sm\">Terms&Conditions</Button></div></div>)}"}, {"path": ".\\app\\(marketing)\\_components", "filename": "heading.tsx", "content": "\"use client\";import{useConvexAuth}from\"convex/react\";import{ArrowRight}from\"lucide-react\";import{SignInButton}from\"@clerk/clerk-react\";import Link from\"next/link\";import{Button}from\"@/components/ui/button\";import{Spinner}from\"@/components/spinner\";export const Heading=()=>{const{isAuthenticated,isLoading}=useConvexAuth();return(<div className=\"max-w-3xl space-y-4\"><h1 className=\"text-3xl sm:text-5xl md:text-6xl font-bold\">Your Ideas,Documents,&Plans.Unified.Welcome to<span className=\"underline\">Jotion</span></h1><h3 className=\"text-base sm:text-xl md:text-2xl font-medium\">Jotion is the connected workspace where<br/>better,faster work happens.</h3>{isLoading&&(<div className=\"w-full flex items-center justify-center\"><Spinner size=\"lg\"/></div>)}{isAuthenticated&&!isLoading&&(<Button asChild><Link href=\"/documents\">Enter Jotion<ArrowRight className=\"h-4 w-4 ml-2\"/></Link></Button>)}{!isAuthenticated&&!isLoading&&(<SignInButton mode=\"modal\"><Button>Get Jotion free<ArrowRight className=\"h-4 w-4 ml-2\"/></Button></SignInButton>)}</div>)}"}, {"path": ".\\app\\(marketing)\\_components", "filename": "heroes.tsx", "content": "import Image from\"next/image\";export const Heroes=()=>{return(<div className=\"flex flex-col items-center justify-center max-w-5xl\"><div className=\"flex items-center\"><div className=\"relative w-[300px] h-[300px] sm:w-[350px] sm:h-[350px] md:h-[400px] md:w-[400px]\"><Image src=\"/documents.png\"fill className=\"object-contain dark:hidden\"alt=\"Documents\"/><Image src=\"/documents-dark.png\"fill className=\"object-contain hidden dark:block\"alt=\"Documents\"/></div><div className=\"relative h-[400px] w-[400px] hidden md:block\"><Image src=\"/reading.png\"fill className=\"object-contain dark:hidden\"alt=\"Reading\"/><Image src=\"/reading-dark.png\"fill className=\"object-contain hidden dark:block\"alt=\"Reading\"/></div></div></div>)}"}, {"path": ".\\app\\(marketing)\\_components", "filename": "logo.tsx", "content": "import Image from\"next/image\";import{Poppins}from\"next/font/google\";import{cn}from\"@/lib/utils\";const font=Poppins({subsets:[\"latin\"],weight:[\"400\",\"600\"]});export const Logo=()=>{return(<div className=\"hidden md:flex items-center gap-x-2\"><Image src=\"/logo.svg\"height=\"40\"width=\"40\"alt=\"Logo\"className=\"dark:hidden\"/><Image src=\"/logo-dark.svg\"height=\"40\"width=\"40\"alt=\"Logo\"className=\"hidden dark:block\"/><p className={cn(\"font-semibold\",font.className)}>Jotion</p></div>)}"}, {"path": ".\\app\\(marketing)\\_components", "filename": "navbar.tsx", "content": "\"use client\";import{useConvexAuth}from\"convex/react\";import{SignInButton,UserButton}from\"@clerk/clerk-react\";import Link from\"next/link\";import{useScrollTop}from\"@/hooks/use-scroll-top\";import{ModeToggle}from\"@/components/mode-toggle\";import{Button}from\"@/components/ui/button\";import{Spinner}from\"@/components/spinner\";import{cn}from\"@/lib/utils\";import{Logo}from\"./logo\";export const Navbar=()=>{const{isAuthenticated,isLoading}=useConvexAuth();const scrolled=useScrollTop();return(<div className={cn(\"z-50 bg-background dark:bg-[#1F1F1F] fixed top-0 flex items-center w-full p-6\",scrolled&&\"border-b shadow-sm\")}><Logo/><div className=\"md:ml-auto md:justify-end justify-between w-full flex items-center gap-x-2\">{isLoading&&(<Spinner/>)}{!isAuthenticated&&!isLoading&&(<><SignInButton mode=\"modal\"><Button variant=\"ghost\"size=\"sm\">Log in</Button></SignInButton><SignInButton mode=\"modal\"><Button size=\"sm\">Get Jotion free</Button></SignInButton></>)}{isAuthenticated&&!isLoading&&(<><Button variant=\"ghost\"size=\"sm\"asChild><Link href=\"/documents\">Enter Jotion</Link></Button><UserButton afterSignOutUrl=\"/\"/></>)}<ModeToggle/></div></div>)}"}, {"path": ".\\app\\(public)", "filename": "layout.tsx", "content": "const PublicLayout=({children}:{children:React.ReactNode;})=>{return(<div className=\"h-full dark:bg-[#1F1F1F]\">{children}</div>);}export default PublicLayout;"}, {"path": ".\\app\\(public)\\(routes)\\preview\\[documentId]", "filename": "page.tsx", "content": "\"use client\";import{useMutation,useQuery}from\"convex/react\";import dynamic from\"next/dynamic\";import{useMemo}from\"react\";import{api}from\"@/convex/_generated/api\";import{Id}from\"@/convex/_generated/dataModel\";import{Toolbar}from\"@/components/toolbar\";import{Cover}from\"@/components/cover\";import{Skeleton}from\"@/components/ui/skeleton\";interface DocumentIdPageProps{params:{documentId:Id<\"documents\">;};};const DocumentIdPage=({params}:DocumentIdPageProps)=>{const Editor=useMemo(()=>dynamic(()=>import(\"@/components/editor\"),{ssr:false}),[]);const document=useQuery(api.documents.getById,{documentId:params.documentId});const update=useMutation(api.documents.update);const onChange=(content:string)=>{update({id:params.documentId,content});};if(document===undefined){return(<div><Cover.Skeleton/><div className=\"md:max-w-3xl lg:max-w-4xl mx-auto mt-10\"><div className=\"space-y-4 pl-8 pt-4\"><Skeleton className=\"h-14 w-[50%]\"/><Skeleton className=\"h-4 w-[80%]\"/><Skeleton className=\"h-4 w-[40%]\"/><Skeleton className=\"h-4 w-[60%]\"/></div></div></div>);}if(document===null){return<div>Not found</div>}return(<div className=\"pb-40\"><Cover preview url={document.coverImage}/><div className=\"md:max-w-3xl lg:max-w-4xl mx-auto\"><Toolbar preview initialData={document}/><Editor editable={false}onChange={onChange}initialContent={document.content}/></div></div>);}export default DocumentIdPage;"}, {"path": ".\\app\\api\\edgestore\\[...edgestore]", "filename": "route.ts", "content": "import{initEdgeStore}from'@edgestore/server';import{createEdgeStoreNextHandler}from'@edgestore/server/adapters/next/app';\u00c2\u00a0 const es=initEdgeStore.create();\u00c2\u00a0 const edgeStoreRouter=es.router({publicFiles:es.fileBucket().beforeDelete(()=>{return true;}),});\u00c2\u00a0 const handler=createEdgeStoreNextHandler({router:edgeStoreRouter,});\u00c2\u00a0 export{handler as GET,handler as POST};\u00c2\u00a0 export type EdgeStoreRouter=typeof edgeStoreRouter;"}, {"path": ".\\components", "filename": "cover.tsx", "content": "\"use client\";import Image from\"next/image\";import{ImageIcon,X}from\"lucide-react\";import{useMutation}from\"convex/react\";import{useParams}from\"next/navigation\";import{Skeleton}from\"@/components/ui/skeleton\";import{cn}from\"@/lib/utils\";import{Button}from\"@/components/ui/button\";import{useCoverImage}from\"@/hooks/use-cover-image\";import{api}from\"@/convex/_generated/api\";import{Id}from\"@/convex/_generated/dataModel\";import{useEdgeStore}from\"@/lib/edgestore\";interface CoverImageProps{url?:string;preview?:boolean;}export const Cover=({url,preview,}:CoverImageProps)=>{const{edgestore}=useEdgeStore();const params=useParams();const coverImage=useCoverImage();const removeCoverImage=useMutation(api.documents.removeCoverImage);const onRemove=async()=>{if(url){await edgestore.publicFiles.delete({url:url})}removeCoverImage({id:params.documentId as Id<\"documents\">});};return(<div className={cn(\"relative w-full h-[35vh] group\",!url&&\"h-[12vh]\",url&&\"bg-muted\")}>{!!url&&(<Image src={url}fill alt=\"Cover\"className=\"object-cover\"/>)}{url&&!preview&&(<div className=\"opacity-0 group-hover:opacity-100 absolute bottom-5 right-5 flex items-center gap-x-2\"><Button onClick={()=>coverImage.onReplace(url)}className=\"text-muted-foreground text-xs\"variant=\"outline\"size=\"sm\"><ImageIcon className=\"h-4 w-4 mr-2\"/>Change cover</Button><Button onClick={onRemove}className=\"text-muted-foreground text-xs\"variant=\"outline\"size=\"sm\"><X className=\"h-4 w-4 mr-2\"/>Remove</Button></div>)}</div>)}Cover.Skeleton=function CoverSkeleton(){return(<Skeleton className=\"w-full h-[12vh]\"/>)}"}, {"path": ".\\components", "filename": "editor.tsx", "content": "\"use client\";import{useTheme}from\"next-themes\";import{BlockNoteEditor,PartialBlock}from\"@blocknote/core\";import{BlockNoteView,useBlockNote}from\"@blocknote/react\";import\"@blocknote/core/style.css\";import{useEdgeStore}from\"@/lib/edgestore\";interface EditorProps{onChange:(value:string)=>void;initialContent?:string;editable?:boolean;};const Editor=({onChange,initialContent,editable}:EditorProps)=>{const{resolvedTheme}=useTheme();const{edgestore}=useEdgeStore();const handleUpload=async(file:File)=>{const response=await edgestore.publicFiles.upload({file});return response.url;}const editor:BlockNoteEditor=useBlockNote({editable,initialContent:initialContent?JSON.parse(initialContent)as PartialBlock[]:undefined,onEditorContentChange:(editor)=>{onChange(JSON.stringify(editor.topLevelBlocks,null,2));},uploadFile:handleUpload})return(<div><BlockNoteView editor={editor}theme={resolvedTheme===\"dark\"?\"dark\":\"light\"}/></div>)}export default Editor;"}, {"path": ".\\components", "filename": "icon-picker.tsx", "content": "\"use client\";import EmojiPicker,{Theme}from\"emoji-picker-react\";import{useTheme}from\"next-themes\";import{Popover,PopoverContent,PopoverTrigger}from\"@/components/ui/popover\";interface IconPickerProps{onChange:(icon:string)=>void;children:React.ReactNode;asChild?:boolean;};export const IconPicker=({onChange,children,asChild}:IconPickerProps)=>{const{resolvedTheme}=useTheme();const currentTheme=(resolvedTheme||\"light\")as keyof typeof themeMap const themeMap={\"dark\":Theme.DARK,\"light\":Theme.LIGHT};const theme=themeMap[currentTheme];return(<Popover><PopoverTrigger asChild={asChild}>{children}</PopoverTrigger><PopoverContent className=\"p-0 w-full border-none shadow-none\"><EmojiPicker height={350}theme={theme}onEmojiClick={(data)=>onChange(data.emoji)}/></PopoverContent></Popover>);};"}, {"path": ".\\components", "filename": "mode-toggle.tsx", "content": "\"use client\"import*as React from\"react\"import{Moon,Sun}from\"lucide-react\"import{useTheme}from\"next-themes\"import{Button}from\"@/components/ui/button\"import{DropdownMenu,DropdownMenuContent,DropdownMenuItem,DropdownMenuTrigger,}from\"@/components/ui/dropdown-menu\"export function ModeToggle(){const{setTheme}=useTheme()return(<DropdownMenu><DropdownMenuTrigger asChild><Button variant=\"outline\"size=\"icon\"><Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\"/><Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\"/><span className=\"sr-only\">Toggle theme</span></Button></DropdownMenuTrigger><DropdownMenuContent align=\"end\"><DropdownMenuItem onClick={()=>setTheme(\"light\")}>Light</DropdownMenuItem><DropdownMenuItem onClick={()=>setTheme(\"dark\")}>Dark</DropdownMenuItem><DropdownMenuItem onClick={()=>setTheme(\"system\")}>System</DropdownMenuItem></DropdownMenuContent></DropdownMenu>)}"}, {"path": ".\\components", "filename": "search-command.tsx", "content": "\"use client\";import{useEffect,useState}from\"react\";import{File}from\"lucide-react\";import{useQuery}from\"convex/react\";import{useRouter}from\"next/navigation\";import{useUser}from\"@clerk/clerk-react\";import{CommandDialog,CommandEmpty,CommandGroup,CommandInput,CommandItem,CommandList}from\"@/components/ui/command\";import{useSearch}from\"@/hooks/use-search\";import{api}from\"@/convex/_generated/api\";export const SearchCommand=()=>{const{user}=useUser();const router=useRouter();const documents=useQuery(api.documents.getSearch);const[isMounted,setIsMounted]=useState(false);const toggle=useSearch((store)=>store.toggle);const isOpen=useSearch((store)=>store.isOpen);const onClose=useSearch((store)=>store.onClose);useEffect(()=>{setIsMounted(true);},[]);useEffect(()=>{const down=(e:KeyboardEvent)=>{if(e.key===\"k\"&&(e.metaKey||e.ctrlKey)){e.preventDefault();toggle();}}document.addEventListener(\"keydown\",down);return()=>document.removeEventListener(\"keydown\",down);},[toggle]);const onSelect=(id:string)=>{router.push(`/documents/${id}`);onClose();};if(!isMounted){return null;}return(<CommandDialog open={isOpen}onOpenChange={onClose}><CommandInput placeholder={`Search ${user?.fullName}'"}, {"path": ".\\components", "filename": "single-image-dropzone.tsx", "content": "'use client';import{UploadCloudIcon,X}from'lucide-react';import*as React from'react';import{useDropzone,type DropzoneOptions}from'react-dropzone';import{twMerge}from'tailwind-merge';import{Spinner}from'./spinner';const variants={base:'relative rounded-md flex justify-center items-center flex-col cursor-pointer min-h-[150px] min-w-[200px] border border-dashed border-gray-400 dark:border-gray-300 transition-colors duration-200 ease-in-out',image:'border-0 p-0 min-h-0 min-w-0 relative shadow-md bg-slate-200 dark:bg-slate-900 rounded-md',active:'border-2',disabled:'bg-gray-200 border-gray-300 cursor-default pointer-events-none bg-opacity-30 dark:bg-gray-700',accept:'border border-blue-500 bg-blue-500 bg-opacity-10',reject:'border border-red-700 bg-red-700 bg-opacity-10',};type InputProps={width?:number;height?:number;className?:string;value?:File|string;onChange?:(file?:File)=>void|Promise<void>;disabled?:boolean;dropzoneOptions?:Omit<DropzoneOptions,'disabled'>;};const ERROR_MESSAGES={fileTooLarge(maxSize:number){return`The file is too large.Max size is ${formatFileSize(maxSize)}.`;},fileInvalidType(){return'Invalid file type.';},tooManyFiles(maxFiles:number){return`You can only add ${maxFiles}file(s).`;},fileNotSupported(){return'The file is not supported.';},};const SingleImageDropzone=React.forwardRef<HTMLInputElement,InputProps>(({dropzoneOptions,width,height,value,className,disabled,onChange},ref,)=>{const imageUrl=React.useMemo(()=>{if(typeof value==='string'){"}, {"path": ".\\components", "filename": "spinner.tsx", "content": "import{Loader}from\"lucide-react\";import{cva,type VariantProps}from\"class-variance-authority\";import{cn}from\"@/lib/utils\";const spinnerVariants=cva(\"text-muted-foreground animate-spin\",{variants:{size:{default:\"h-4 w-4\",sm:\"h-2 w-2\",lg:\"h-6 w-6\",icon:\"h-10 w-10\"}},defaultVariants:{size:\"default\",},},);interface SpinnerProps extends VariantProps<typeof spinnerVariants>{}export const Spinner=({size,}:SpinnerProps)=>{return(<Loader className={cn(spinnerVariants({size}))}/>);};"}, {"path": ".\\components", "filename": "toolbar.tsx", "content": "\"use client\";import{ElementRef,useRef,useState}from\"react\";import{ImageIcon,Smile,X}from\"lucide-react\";import{useMutation}from\"convex/react\";import TextareaAutosize from\"react-textarea-autosize\";import{useCoverImage}from\"@/hooks/use-cover-image\";import{Doc}from\"@/convex/_generated/dataModel\";import{Button}from\"@/components/ui/button\";import{api}from\"@/convex/_generated/api\";import{IconPicker}from\"./icon-picker\";interface ToolbarProps{initialData:Doc<\"documents\">;preview?:boolean;};export const Toolbar=({initialData,preview}:ToolbarProps)=>{const inputRef=useRef<ElementRef<\"textarea\">>(null);const[isEditing,setIsEditing]=useState(false);const[value,setValue]=useState(initialData.title);const update=useMutation(api.documents.update);const removeIcon=useMutation(api.documents.removeIcon);const coverImage=useCoverImage();const enableInput=()=>{if(preview)return;setIsEditing(true);setTimeout(()=>{setValue(initialData.title);inputRef.current?.focus();},0);};const disableInput=()=>setIsEditing(false);const onInput=(value:string)=>{setValue(value);update({id:initialData._id,title:value||\"Untitled\"});};const onKeyDown=(event:React.KeyboardEvent<HTMLTextAreaElement>)=>{if(event.key===\"Enter\"){event.preventDefault();disableInput();}};const onIconSelect=(icon:string)=>{update({id:initialData._id,icon,});};const onRemoveIcon=()=>{removeIcon({id:initialData._id})}return(<div className=\"pl-[54px] group relative\">{!!initialData.icon&&!preview&&(<div className=\"flex items-center gap-x-2 group/icon pt-6\"><IconPicker onChange={onIconSelect}><p className=\"text-6xl hover:opacity-75 transition\">{initialData.icon}</p></IconPicker><Button onClick={onRemoveIcon}className=\"rounded-full opacity-0 group-hover/icon:opacity-100 transition text-muted-foreground text-xs\"variant=\"outline\"size=\"icon\"><X className=\"h-4 w-4\"/></Button></div>)}{!!initialData.icon&&preview&&(<p className=\"text-6xl pt-6\">{initialData.icon}</p>)}<div className=\"opacity-0 group-hover:opacity-100 flex items-center gap-x-1 py-4\">{!initialData.icon&&!preview&&(<IconPicker asChild onChange={onIconSelect}><Button className=\"text-muted-foreground text-xs\"variant=\"outline\"size=\"sm\"><Smile className=\"h-4 w-4 mr-2\"/>Add icon</Button></IconPicker>)}{!initialData.coverImage&&!preview&&(<Button onClick={coverImage.onOpen}className=\"text-muted-foreground text-xs\"variant=\"outline\"size=\"sm\"><ImageIcon className=\"h-4 w-4 mr-2\"/>Add cover</Button>)}</div>{isEditing&&!preview?(<TextareaAutosize ref={inputRef}onBlur={disableInput}onKeyDown={onKeyDown}value={value}onChange={(e)=>onInput(e.target.value)}className=\"text-5xl bg-transparent font-bold break-words outline-none text-[#3F3F3F] dark:text-[#CFCFCF] resize-none\"/>):(<div onClick={enableInput}className=\"pb-[11.5px] text-5xl font-bold break-words outline-none text-[#3F3F3F] dark:text-[#CFCFCF]\">{initialData.title}</div>)}</div>)}"}, {"path": ".\\components\\modals", "filename": "confirm-modal.tsx", "content": "\"use client\";import{AlertDialog,AlertDialogAction,AlertDialogCancel,AlertDialogContent,AlertDialogDescription,AlertDialogFooter,AlertDialogHeader,AlertDialogTitle,AlertDialogTrigger}from\"@/components/ui/alert-dialog\";interface ConfirmModalProps{children:React.ReactNode;onConfirm:()=>void;};export const ConfirmModal=({children,onConfirm}:ConfirmModalProps)=>{const handleConfirm=(e:React.MouseEvent<HTMLButtonElement,MouseEvent>)=>{e.stopPropagation();onConfirm();};return(<AlertDialog><AlertDialogTrigger onClick={(e)=>e.stopPropagation()}asChild>{children}</AlertDialogTrigger><AlertDialogContent><AlertDialogHeader><AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle><AlertDialogDescription>This action cannot be undone.</AlertDialogDescription></AlertDialogHeader><AlertDialogFooter><AlertDialogCancel onClick={e=>e.stopPropagation()}>Cancel</AlertDialogCancel><AlertDialogAction onClick={handleConfirm}>Confirm</AlertDialogAction></AlertDialogFooter></AlertDialogContent></AlertDialog>)}"}, {"path": ".\\components\\modals", "filename": "cover-image-modal.tsx", "content": "\"use client\";import{useState}from\"react\";import{useMutation}from\"convex/react\";import{useParams}from\"next/navigation\";import{Dialog,DialogContent,DialogHeader}from\"@/components/ui/dialog\";import{useCoverImage}from\"@/hooks/use-cover-image\";import{SingleImageDropzone}from\"@/components/single-image-dropzone\";import{useEdgeStore}from\"@/lib/edgestore\";import{api}from\"@/convex/_generated/api\";import{Id}from\"@/convex/_generated/dataModel\";export const CoverImageModal=()=>{const params=useParams();const update=useMutation(api.documents.update);const coverImage=useCoverImage();const{edgestore}=useEdgeStore();const[file,setFile]=useState<File>();const[isSubmitting,setIsSubmitting]=useState(false);const onClose=()=>{setFile(undefined);setIsSubmitting(false);coverImage.onClose();}const onChange=async(file?:File)=>{if(file){setIsSubmitting(true);setFile(file);const res=await edgestore.publicFiles.upload({file,options:{replaceTargetUrl:coverImage.url}});await update({id:params.documentId as Id<\"documents\">,coverImage:res.url});onClose();}}return(<Dialog open={coverImage.isOpen}onOpenChange={coverImage.onClose}><DialogContent><DialogHeader><h2 className=\"text-center text-lg font-semibold\">Cover Image</h2></DialogHeader><SingleImageDropzone className=\"w-full outline-none\"disabled={isSubmitting}value={file}onChange={onChange}/></DialogContent></Dialog>);};"}, {"path": ".\\components\\modals", "filename": "settings-modal.tsx", "content": "\"use client\";import{Dialog,DialogContent,DialogHeader}from\"@/components/ui/dialog\";import{useSettings}from\"@/hooks/use-settings\";import{Label}from\"@/components/ui/label\";import{ModeToggle}from\"@/components/mode-toggle\";export const SettingsModal=()=>{const settings=useSettings();return(<Dialog open={settings.isOpen}onOpenChange={settings.onClose}><DialogContent><DialogHeader className=\"border-b pb-3\"><h2 className=\"text-lg font-medium\">My settings</h2></DialogHeader><div className=\"flex items-center justify-between\"><div className=\"flex flex-col gap-y-1\"><Label>Appearance</Label><span className=\"text-[0.8rem] text-muted-foreground\">Customize how Jotion looks on your device</span></div><ModeToggle/></div></DialogContent></Dialog>);};"}, {"path": ".\\components\\providers", "filename": "convex-provider.tsx", "content": "\"use client\";import{ReactNode}from\"react\";import{ConvexReactClient}from\"convex/react\";import{ConvexProviderWithClerk}from\"convex/react-clerk\";import{ClerkProvider,useAuth}from\"@clerk/clerk-react\";const convex=new ConvexReactClient(process.env.NEXT_PUBLIC_CONVEX_URL!);export const ConvexClientProvider=({children}:{children:ReactNode;})=>{return(<ClerkProvider publishableKey={process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY!}><ConvexProviderWithClerk useAuth={useAuth}client={convex}>{children}</ConvexProviderWithClerk></ClerkProvider>);};"}, {"path": ".\\components\\providers", "filename": "modal-provider.tsx", "content": "\"use client\";import{useEffect,useState}from\"react\";import{SettingsModal}from\"@/components/modals/settings-modal\";import{CoverImageModal}from\"@/components/modals/cover-image-modal\";export const ModalProvider=()=>{const[isMounted,setIsMounted]=useState(false);useEffect(()=>{setIsMounted(true);},[]);if(!isMounted){return null;}return(<><SettingsModal/><CoverImageModal/></>);};"}, {"path": ".\\components\\providers", "filename": "theme-provider.tsx", "content": "\"use client\"import*as React from\"react\"import{ThemeProvider as NextThemesProvider}from\"next-themes\"import{type ThemeProviderProps}from\"next-themes/dist/types\"export function ThemeProvider({children,...props}:ThemeProviderProps){return<NextThemesProvider{...props}>{children}</NextThemesProvider>}"}, {"path": ".\\components\\ui", "filename": "alert-dialog.tsx", "content": "\"use client\"import*as React from\"react\"import*as AlertDialogPrimitive from\"@radix-ui/react-alert-dialog\"import{cn}from\"@/lib/utils\"import{buttonVariants}from\"@/components/ui/button\"const AlertDialog=AlertDialogPrimitive.Root const AlertDialogTrigger=AlertDialogPrimitive.Trigger const AlertDialogPortal=AlertDialogPrimitive.Portal const AlertDialogOverlay=React.forwardRef<React.ElementRef<typeof AlertDialogPrimitive.Overlay>,React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>>(({className,children,...props},ref)=>(<AlertDialogPrimitive.Overlay className={cn(\"fixed inset-0 z-[99999] bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",className)}{...props}ref={ref}/>))AlertDialogOverlay.displayName=AlertDialogPrimitive.Overlay.displayName const AlertDialogContent=React.forwardRef<React.ElementRef<typeof AlertDialogPrimitive.Content>,React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>>(({className,...props},ref)=>(<AlertDialogPortal><AlertDialogOverlay/><AlertDialogPrimitive.Content ref={ref}className={cn(\"fixed left-[50%] top-[50%] z-[99999] grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg md:w-full\",className)}{...props}/></AlertDialogPortal>))AlertDialogContent.displayName=AlertDialogPrimitive.Content.displayName const AlertDialogHeader=({className,...props}:React.HTMLAttributes<HTMLDivElement>)=>(<div className={cn(\"flex flex-col space-y-2 text-center sm:text-left\",className)}{...props}/>)AlertDialogHeader.displayName=\"AlertDialogHeader\"const AlertDialogFooter=({className,...props}:React.HTMLAttributes<HTMLDivElement>)=>(<div className={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",className)}{...props}/>)AlertDialogFooter.displayName=\"AlertDialogFooter\"const AlertDialogTitle=React.forwardRef<React.ElementRef<typeof AlertDialogPrimitive.Title>,React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>>(({className,...props},ref)=>(<AlertDialogPrimitive.Title ref={ref}className={cn(\"text-lg font-semibold\",className)}{...props}/>))AlertDialogTitle.displayName=AlertDialogPrimitive.Title.displayName const AlertDialogDescription=React.forwardRef<React.ElementRef<typeof AlertDialogPrimitive.Description>,React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>>(({className,...props},ref)=>(<AlertDialogPrimitive.Description ref={ref}className={cn(\"text-sm text-muted-foreground\",className)}{...props}/>))AlertDialogDescription.displayName=AlertDialogPrimitive.Description.displayName const AlertDialogAction=React.forwardRef<React.ElementRef<typeof AlertDialogPrimitive.Action>,React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>>(({className,...props},ref)=>(<AlertDialogPrimitive.Action ref={ref}className={cn(buttonVariants(),className)}{...props}/>))AlertDialogAction.displayName=AlertDialogPrimitive.Action.displayName const AlertDialogCancel=React.forwardRef<React.ElementRef<typeof AlertDialogPrimitive.Cancel>,React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>>(({className,...props},ref)=>(<AlertDialogPrimitive.Cancel ref={ref}className={cn(buttonVariants({variant:\"outline\"}),\"mt-2 sm:mt-0\",className)}{...props}/>))AlertDialogCancel.displayName=AlertDialogPrimitive.Cancel.displayName export{AlertDialog,AlertDialogPortal,AlertDialogOverlay,AlertDialogTrigger,AlertDialogContent,AlertDialogHeader,AlertDialogFooter,AlertDialogTitle,AlertDialogDescription,AlertDialogAction,AlertDialogCancel,}"}, {"path": ".\\components\\ui", "filename": "avatar.tsx", "content": "\"use client\"import*as React from\"react\"import*as AvatarPrimitive from\"@radix-ui/react-avatar\"import{cn}from\"@/lib/utils\"const Avatar=React.forwardRef<React.ElementRef<typeof AvatarPrimitive.Root>,React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>>(({className,...props},ref)=>(<AvatarPrimitive.Root ref={ref}className={cn(\"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",className)}{...props}/>))Avatar.displayName=AvatarPrimitive.Root.displayName const AvatarImage=React.forwardRef<React.ElementRef<typeof AvatarPrimitive.Image>,React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>>(({className,...props},ref)=>(<AvatarPrimitive.Image ref={ref}className={cn(\"aspect-square h-full w-full\",className)}{...props}/>))AvatarImage.displayName=AvatarPrimitive.Image.displayName const AvatarFallback=React.forwardRef<React.ElementRef<typeof AvatarPrimitive.Fallback>,React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>>(({className,...props},ref)=>(<AvatarPrimitive.Fallback ref={ref}className={cn(\"flex h-full w-full items-center justify-center rounded-full bg-muted\",className)}{...props}/>))AvatarFallback.displayName=AvatarPrimitive.Fallback.displayName export{Avatar,AvatarImage,AvatarFallback}"}, {"path": ".\\components\\ui", "filename": "button.tsx", "content": "import*as React from\"react\"import{Slot}from\"@radix-ui/react-slot\"import{cva,type VariantProps}from\"class-variance-authority\"import{cn}from\"@/lib/utils\"const buttonVariants=cva(\"inline-flex items-center justify-center rounded-sm text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",{variants:{variant:{default:\"bg-primary text-primary-foreground hover:bg-primary/90\",destructive:\"bg-destructive text-destructive-foreground hover:bg-destructive/90\",outline:\"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",secondary:\"bg-secondary text-secondary-foreground hover:bg-secondary/80\",ghost:\"hover:bg-accent hover:text-accent-foreground\",link:\"text-primary underline-offset-4 hover:underline\",},size:{default:\"h-10 px-4 py-2\",sm:\"h-9 rounded-md px-3\",lg:\"h-11 rounded-md px-8\",icon:\"h-10 w-10\",},},defaultVariants:{variant:\"default\",size:\"default\",},})export interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement>,VariantProps<typeof buttonVariants>{asChild?:boolean}const Button=React.forwardRef<HTMLButtonElement,ButtonProps>(({className,variant,size,asChild=false,...props},ref)=>{const Comp=asChild?Slot:\"button\"return(<Comp className={cn(buttonVariants({variant,size,className}))}ref={ref}{...props}/>)})Button.displayName=\"Button\"export{Button,buttonVariants}"}, {"path": ".\\components\\ui", "filename": "command.tsx", "content": "\"use client\"import*as React from\"react\"import{DialogProps}from\"@radix-ui/react-dialog\"import{Command as CommandPrimitive}from\"cmdk\"import{Search}from\"lucide-react\"import{cn}from\"@/lib/utils\"import{Dialog,DialogContent}from\"@/components/ui/dialog\"const Command=React.forwardRef<React.ElementRef<typeof CommandPrimitive>,React.ComponentPropsWithoutRef<typeof CommandPrimitive>>(({className,...props},ref)=>(<CommandPrimitive ref={ref}className={cn(\"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",className)}{...props}/>))Command.displayName=CommandPrimitive.displayName interface CommandDialogProps extends DialogProps{}const CommandDialog=({children,...props}:CommandDialogProps)=>{return(<Dialog{...props}><DialogContent className=\"overflow-hidden p-0 shadow-lg\"><Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">{children}</Command></DialogContent></Dialog>)}const CommandInput=React.forwardRef<React.ElementRef<typeof CommandPrimitive.Input>,React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>>(({className,...props},ref)=>(<div className=\"flex items-center border-b px-3\"cmdk-input-wrapper=\"\"><Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\"/><CommandPrimitive.Input ref={ref}className={cn(\"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",className)}{...props}/></div>))CommandInput.displayName=CommandPrimitive.Input.displayName const CommandList=React.forwardRef<React.ElementRef<typeof CommandPrimitive.List>,React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>>(({className,...props},ref)=>(<CommandPrimitive.List ref={ref}className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\",className)}{...props}/>))CommandList.displayName=CommandPrimitive.List.displayName const CommandEmpty=React.forwardRef<React.ElementRef<typeof CommandPrimitive.Empty>,React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>>((props,ref)=>(<CommandPrimitive.Empty ref={ref}className=\"py-6 text-center text-sm\"{...props}/>))CommandEmpty.displayName=CommandPrimitive.Empty.displayName const CommandGroup=React.forwardRef<React.ElementRef<typeof CommandPrimitive.Group>,React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>>(({className,...props},ref)=>(<CommandPrimitive.Group ref={ref}className={cn(\"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",className)}{...props}/>))CommandGroup.displayName=CommandPrimitive.Group.displayName const CommandSeparator=React.forwardRef<React.ElementRef<typeof CommandPrimitive.Separator>,React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>>(({className,...props},ref)=>(<CommandPrimitive.Separator ref={ref}className={cn(\"-mx-1 h-px bg-border\",className)}{...props}/>))CommandSeparator.displayName=CommandPrimitive.Separator.displayName const CommandItem=React.forwardRef<React.ElementRef<typeof CommandPrimitive.Item>,React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>>(({className,...props},ref)=>(<CommandPrimitive.Item ref={ref}className={cn(\"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none aria-selected:bg-accent aria-selected:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",className)}{...props}/>))CommandItem.displayName=CommandPrimitive.Item.displayName const CommandShortcut=({className,...props}:React.HTMLAttributes<HTMLSpanElement>)=>{return(<span className={cn(\"ml-auto text-xs tracking-widest text-muted-foreground\",className)}{...props}/>)}CommandShortcut.displayName=\"CommandShortcut\"export{Command,CommandDialog,CommandInput,CommandList,CommandEmpty,CommandGroup,CommandItem,CommandShortcut,CommandSeparator,}"}, {"path": ".\\components\\ui", "filename": "dialog.tsx", "content": "\"use client\"import*as React from\"react\"import*as DialogPrimitive from\"@radix-ui/react-dialog\"import{X}from\"lucide-react\"import{cn}from\"@/lib/utils\"const Dialog=DialogPrimitive.Root const DialogTrigger=DialogPrimitive.Trigger const DialogPortal=DialogPrimitive.Portal const DialogOverlay=React.forwardRef<React.ElementRef<typeof DialogPrimitive.Overlay>,React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>>(({className,...props},ref)=>(<DialogPrimitive.Overlay ref={ref}className={cn(\"fixed inset-0 z-[99999] bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",className)}{...props}/>))DialogOverlay.displayName=DialogPrimitive.Overlay.displayName const DialogContent=React.forwardRef<React.ElementRef<typeof DialogPrimitive.Content>,React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>>(({className,children,...props},ref)=>(<DialogPortal><DialogOverlay/><DialogPrimitive.Content ref={ref}className={cn(\"fixed left-[50%] top-[50%] z-[99999] grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg md:w-full\",className)}{...props}>{children}<DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\"><X className=\"h-4 w-4\"/><span className=\"sr-only\">Close</span></DialogPrimitive.Close></DialogPrimitive.Content></DialogPortal>))DialogContent.displayName=DialogPrimitive.Content.displayName const DialogHeader=({className,...props}:React.HTMLAttributes<HTMLDivElement>)=>(<div className={cn(\"flex flex-col space-y-1.5 text-center sm:text-left\",className)}{...props}/>)DialogHeader.displayName=\"DialogHeader\"const DialogFooter=({className,...props}:React.HTMLAttributes<HTMLDivElement>)=>(<div className={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",className)}{...props}/>)DialogFooter.displayName=\"DialogFooter\"const DialogTitle=React.forwardRef<React.ElementRef<typeof DialogPrimitive.Title>,React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>>(({className,...props},ref)=>(<DialogPrimitive.Title ref={ref}className={cn(\"text-lg font-semibold leading-none tracking-tight\",className)}{...props}/>))DialogTitle.displayName=DialogPrimitive.Title.displayName const DialogDescription=React.forwardRef<React.ElementRef<typeof DialogPrimitive.Description>,React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>>(({className,...props},ref)=>(<DialogPrimitive.Description ref={ref}className={cn(\"text-sm text-muted-foreground\",className)}{...props}/>))DialogDescription.displayName=DialogPrimitive.Description.displayName export{Dialog,DialogPortal,DialogOverlay,DialogTrigger,DialogContent,DialogHeader,DialogFooter,DialogTitle,DialogDescription,}"}, {"path": ".\\components\\ui", "filename": "dropdown-menu.tsx", "content": "\"use client\"import*as React from\"react\"import*as DropdownMenuPrimitive from\"@radix-ui/react-dropdown-menu\"import{Check,ChevronRight,Circle}from\"lucide-react\"import{cn}from\"@/lib/utils\"const DropdownMenu=DropdownMenuPrimitive.Root const DropdownMenuTrigger=DropdownMenuPrimitive.Trigger const DropdownMenuGroup=DropdownMenuPrimitive.Group const DropdownMenuPortal=DropdownMenuPrimitive.Portal const DropdownMenuSub=DropdownMenuPrimitive.Sub const DropdownMenuRadioGroup=DropdownMenuPrimitive.RadioGroup const DropdownMenuSubTrigger=React.forwardRef<React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger>&{inset?:boolean}>(({className,inset,children,...props},ref)=>(<DropdownMenuPrimitive.SubTrigger ref={ref}className={cn(\"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",inset&&\"pl-8\",className)}{...props}>{children}<ChevronRight className=\"ml-auto h-4 w-4\"/></DropdownMenuPrimitive.SubTrigger>))DropdownMenuSubTrigger.displayName=DropdownMenuPrimitive.SubTrigger.displayName const DropdownMenuSubContent=React.forwardRef<React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>>(({className,...props},ref)=>(<DropdownMenuPrimitive.SubContent ref={ref}className={cn(\"z-[9999] min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",className)}{...props}/>))DropdownMenuSubContent.displayName=DropdownMenuPrimitive.SubContent.displayName const DropdownMenuContent=React.forwardRef<React.ElementRef<typeof DropdownMenuPrimitive.Content>,React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>>(({className,sideOffset=4,...props},ref)=>(<DropdownMenuPrimitive.Portal><DropdownMenuPrimitive.Content ref={ref}sideOffset={sideOffset}className={cn(\"z-[99999] min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",className)}{...props}/></DropdownMenuPrimitive.Portal>))DropdownMenuContent.displayName=DropdownMenuPrimitive.Content.displayName const DropdownMenuItem=React.forwardRef<React.ElementRef<typeof DropdownMenuPrimitive.Item>,React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item>&{inset?:boolean}>(({className,inset,...props},ref)=>(<DropdownMenuPrimitive.Item ref={ref}className={cn(\"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",inset&&\"pl-8\",className)}{...props}/>))DropdownMenuItem.displayName=DropdownMenuPrimitive.Item.displayName const DropdownMenuCheckboxItem=React.forwardRef<React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>>(({className,children,checked,...props},ref)=>(<DropdownMenuPrimitive.CheckboxItem ref={ref}className={cn(\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",className)}checked={checked}{...props}><span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\"><DropdownMenuPrimitive.ItemIndicator><Check className=\"h-4 w-4\"/></DropdownMenuPrimitive.ItemIndicator></span>{children}</DropdownMenuPrimitive.CheckboxItem>))DropdownMenuCheckboxItem.displayName=DropdownMenuPrimitive.CheckboxItem.displayName const DropdownMenuRadioItem=React.forwardRef<React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>>(({className,children,...props},ref)=>(<DropdownMenuPrimitive.RadioItem ref={ref}className={cn(\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",className)}{...props}><span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\"><DropdownMenuPrimitive.ItemIndicator><Circle className=\"h-2 w-2 fill-current\"/></DropdownMenuPrimitive.ItemIndicator></span>{children}</DropdownMenuPrimitive.RadioItem>))DropdownMenuRadioItem.displayName=DropdownMenuPrimitive.RadioItem.displayName const DropdownMenuLabel=React.forwardRef<React.ElementRef<typeof DropdownMenuPrimitive.Label>,React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label>&{inset?:boolean}>(({className,inset,...props},ref)=>(<DropdownMenuPrimitive.Label ref={ref}className={cn(\"px-2 py-1.5 text-sm font-semibold\",inset&&\"pl-8\",className)}{...props}/>))DropdownMenuLabel.displayName=DropdownMenuPrimitive.Label.displayName const DropdownMenuSeparator=React.forwardRef<React.ElementRef<typeof DropdownMenuPrimitive.Separator>,React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>>(({className,...props},ref)=>(<DropdownMenuPrimitive.Separator ref={ref}className={cn(\"-mx-1 my-1 h-px bg-muted\",className)}{...props}/>))DropdownMenuSeparator.displayName=DropdownMenuPrimitive.Separator.displayName const DropdownMenuShortcut=({className,...props}:React.HTMLAttributes<HTMLSpanElement>)=>{return(<span className={cn(\"ml-auto text-xs tracking-widest opacity-60\",className)}{...props}/>)}DropdownMenuShortcut.displayName=\"DropdownMenuShortcut\"export{DropdownMenu,DropdownMenuTrigger,DropdownMenuContent,DropdownMenuItem,DropdownMenuCheckboxItem,DropdownMenuRadioItem,DropdownMenuLabel,DropdownMenuSeparator,DropdownMenuShortcut,DropdownMenuGroup,DropdownMenuPortal,DropdownMenuSub,DropdownMenuSubContent,DropdownMenuSubTrigger,DropdownMenuRadioGroup,}"}, {"path": ".\\components\\ui", "filename": "input.tsx", "content": "import*as React from\"react\"import{cn}from\"@/lib/utils\"export interface InputProps extends React.InputHTMLAttributes<HTMLInputElement>{}const Input=React.forwardRef<HTMLInputElement,InputProps>(({className,type,...props},ref)=>{return(<input type={type}className={cn(\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",className)}ref={ref}{...props}/>)})Input.displayName=\"Input\"export{Input}"}, {"path": ".\\components\\ui", "filename": "label.tsx", "content": "\"use client\"import*as React from\"react\"import*as LabelPrimitive from\"@radix-ui/react-label\"import{cva,type VariantProps}from\"class-variance-authority\"import{cn}from\"@/lib/utils\"const labelVariants=cva(\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\")const Label=React.forwardRef<React.ElementRef<typeof LabelPrimitive.Root>,React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>&VariantProps<typeof labelVariants>>(({className,...props},ref)=>(<LabelPrimitive.Root ref={ref}className={cn(labelVariants(),className)}{...props}/>))Label.displayName=LabelPrimitive.Root.displayName export{Label}"}, {"path": ".\\components\\ui", "filename": "popover.tsx", "content": "\"use client\"import*as React from\"react\"import*as PopoverPrimitive from\"@radix-ui/react-popover\"import{cn}from\"@/lib/utils\"const Popover=PopoverPrimitive.Root const PopoverTrigger=PopoverPrimitive.Trigger const PopoverContent=React.forwardRef<React.ElementRef<typeof PopoverPrimitive.Content>,React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>>(({className,align=\"center\",sideOffset=4,...props},ref)=>(<PopoverPrimitive.Portal><PopoverPrimitive.Content ref={ref}align={align}sideOffset={sideOffset}className={cn(\"z-[99999] w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",className)}{...props}/></PopoverPrimitive.Portal>))PopoverContent.displayName=PopoverPrimitive.Content.displayName export{Popover,PopoverTrigger,PopoverContent}"}, {"path": ".\\components\\ui", "filename": "skeleton.tsx", "content": "import{cn}from\"@/lib/utils\"function Skeleton({className,...props}:React.HTMLAttributes<HTMLDivElement>){return(<div className={cn(\"animate-pulse rounded-md bg-primary/5\",className)}{...props}/>)}export{Skeleton}"}, {"path": ".\\convex", "filename": "auth.config.js", "content": ""}, {"path": ".\\convex", "filename": "documents.ts", "content": "import{v}from\"convex/values\";import{mutation,query}from\"./_generated/server\";import{Doc,Id}from\"./_generated/dataModel\";import{Permission}from'./permissions';"}, {"path": ".\\convex", "filename": "permissions.ts", "content": ""}, {"path": ".\\convex", "filename": "schema.ts", "content": "import{defineSchema,defineTable}from\"convex/server\";import{v}from\"convex/values\";import{Permission}from'./permissions';"}, {"path": ".\\convex", "filename": "userprofile.ts", "content": "import{v}from\"convex/values\";import{mutation}from\"./_generated/server\";export const upsertUserProfile=mutation({args:{clerkUserId:v.string(),profileData:v.object({avatar:v.optional(v.string()),displayName:v.optional(v.string()),email:v.optional(v.string()),"}, {"path": ".\\convex\\_generated", "filename": "api.d.ts", "content": "import type{ApiFromModules,FilterApi,FunctionReference,}from\"convex/server\";import type*as documents from\"../documents\";declare const fullApi:ApiFromModules<{documents:typeof documents;}>;export declare const api:FilterApi<typeof fullApi,FunctionReference<any,\"public\">>;export declare const internal:FilterApi<typeof fullApi,FunctionReference<any,\"internal\">>;"}, {"path": ".\\convex\\_generated", "filename": "api.js", "content": "import{anyApi}from\"convex/server\";export const api=anyApi;export const internal=anyApi;"}, {"path": ".\\convex\\_generated", "filename": "dataModel.d.ts", "content": "import type{DataModelFromSchemaDefinition}from\"convex/server\";import type{DocumentByName,TableNamesInDataModel}from\"convex/server\";import type{GenericId}from\"convex/values\";import schema from\"../schema\";export type TableNames=TableNamesInDataModel<DataModel>;export type Doc<TableName extends TableNames>=DocumentByName<DataModel,TableName>;export type Id<TableName extends TableNames>=GenericId<TableName>;export type DataModel=DataModelFromSchemaDefinition<typeof schema>;"}, {"path": ".\\convex\\_generated", "filename": "server.d.ts", "content": "import{ActionBuilder,HttpActionBuilder,MutationBuilder,QueryBuilder,GenericActionCtx,GenericMutationCtx,GenericQueryCtx,GenericDatabaseReader,GenericDatabaseWriter,}from\"convex/server\";import type{DataModel}from\"./dataModel.js\";export declare const query:QueryBuilder<DataModel,\"public\">;export declare const internalQuery:QueryBuilder<DataModel,\"internal\">;export declare const mutation:MutationBuilder<DataModel,\"public\">;export declare const internalMutation:MutationBuilder<DataModel,\"internal\">;export declare const action:ActionBuilder<DataModel,\"public\">;export declare const internalAction:ActionBuilder<DataModel,\"internal\">;export declare const httpAction:HttpActionBuilder;export type QueryCtx=GenericQueryCtx<DataModel>;export type MutationCtx=GenericMutationCtx<DataModel>;export type ActionCtx=GenericActionCtx<DataModel>;export type DatabaseReader=GenericDatabaseReader<DataModel>;export type DatabaseWriter=GenericDatabaseWriter<DataModel>;"}, {"path": ".\\convex\\_generated", "filename": "server.js", "content": "import{actionGeneric,httpActionGeneric,queryGeneric,mutationGeneric,internalActionGeneric,internalMutationGeneric,internalQueryGeneric,}from\"convex/server\";export const query=queryGeneric;export const internalQuery=internalQueryGeneric;export const mutation=mutationGeneric;export const internalMutation=internalMutationGeneric;export const action=actionGeneric;export const internalAction=internalActionGeneric;export const httpAction=httpActionGeneric;"}, {"path": ".\\hooks", "filename": "use-cover-image.tsx", "content": "import{create}from\"zustand\";type CoverImageStore={url?:string;isOpen:boolean;onOpen:()=>void;onClose:()=>void;onReplace:(url:string)=>void;};export const useCoverImage=create<CoverImageStore>((set)=>({url:undefined,isOpen:false,onOpen:()=>set({isOpen:true,url:undefined}),onClose:()=>set({isOpen:false,url:undefined}),onReplace:(url:string)=>set({isOpen:true,url})}));"}, {"path": ".\\hooks", "filename": "use-origin.tsx", "content": "import{useEffect,useState}from\"react\";export const useOrigin=()=>{const[mounted,setMounted]=useState(false);const origin=typeof window!==\"undefined\"&&window.location.origin?window.location.origin:\"\";useEffect(()=>{setMounted(true);},[]);if(!mounted){return\"\";}return origin;};"}, {"path": ".\\hooks", "filename": "use-scroll-top.tsx", "content": "import{useState,useEffect}from\"react\";export const useScrollTop=(threshold=10)=>{const[scrolled,setScrolled]=useState(false);useEffect(()=>{const handleScroll=()=>{if(window.scrollY>threshold){setScrolled(true);}else{setScrolled(false);}};window.addEventListener(\"scroll\",handleScroll);return()=>window.removeEventListener(\"scroll\",handleScroll);},[threshold]);return scrolled;}"}, {"path": ".\\hooks", "filename": "use-search.tsx", "content": "import{create}from\"zustand\";type SearchStore={isOpen:boolean;onOpen:()=>void;onClose:()=>void;toggle:()=>void;};export const useSearch=create<SearchStore>((set,get)=>({isOpen:false,onOpen:()=>set({isOpen:true}),onClose:()=>set({isOpen:false}),toggle:()=>set({isOpen:!get().isOpen}),}));"}, {"path": ".\\hooks", "filename": "use-settings.tsx", "content": "import{create}from\"zustand\";type SettingsStore={isOpen:boolean;onOpen:()=>void;onClose:()=>void;};export const useSettings=create<SettingsStore>((set)=>({isOpen:false,onOpen:()=>set({isOpen:true}),onClose:()=>set({isOpen:false}),}));"}, {"path": ".\\lib", "filename": "edgestore.ts", "content": "'use client';\u00c2\u00a0 import{type EdgeStoreRouter}from'../app/api/edgestore/[...edgestore]/route';import{createEdgeStoreProvider}from'@edgestore/react';\u00c2\u00a0 const{EdgeStoreProvider,useEdgeStore}=createEdgeStoreProvider<EdgeStoreRouter>();\u00c2\u00a0 export{EdgeStoreProvider,useEdgeStore};"}, {"path": ".\\lib", "filename": "utils.ts", "content": "import{type ClassValue,clsx}from\"clsx\"import{twMerge}from\"tailwind-merge\"export function cn(...inputs:ClassValue[]){return twMerge(clsx(inputs))}"}]